/*
ПРАКТИЧЕСКИЕ ЗАДАНИЯ ПО ES6
! Все задания пишем в одном файле, ограничивая область видимости конкретного решения.
! Для того, чтобы WebStorm поддерживал синтаксис ES6 - File -> Settings -> в поиске пишем JavaScript ->
	Languages & Frameworks -> JavaScript -> Выбираем версию ES6 -> Apply
! В консоли, во избежание проблем, всем тестируемым примерам также ограничиваем область видимости.

	Задание 1:
Имеется следующий объект - {a: 1, b: 2, c: 3, d: 4}. Необходимо сделать так, чтобы в переменные a и b записались
соответствующие значения, а все, что осталось - в объект obj.

	Задание 2:
Запросить у пользователя имя и сохранить его в переменную.
	Создать объект со свойством name, куда записать короткой записью значение имени пользователя, и методом sayHi,
	который будет возвращать строку вида:
	"Hi, (имя пользователя)!"
Имя пользователя получать уже из объекта.
	Проверить работу метода. Убедиться в уместном использовании способов задания переменной.

	Задание 3:
Написать функцию, которая будет принимать параметры x, y, z.
	При вызове функции передать в неё первым параметром объект вида {a: 2, b: 3}, вторым параметром целое число.
	X и y получаем из свойств переданного в функцию объекта a и b. У z значение по-умолчанию должно быть 1.
Функция должна возвращать результат возведения в степень y числа x, умноженный на z.
	Валидацию опустить.

	Задание 4:
Создать массив с именем и возрастом. Передать его в функцию. Функция должна принять его как два отдельных параметра
name и age и вернуть строку вида:
	"Hello, I'm (имя) and I'm (возраст) years old."
Не использовать деструктуризацию.

	Задание 5:
Написать функцию, принимающую массив чисел. При вызове числа передаются в функцию отдельными параметрами, не массивом.
	Вывести в консоль числа последовательно.

	Задание 6:
Переписать решение задачи с поиском гласных на новый синтаксис. Использовать перебирающий метод массива и поиск
элемента в массиве.
	function countVowelLetters(text) {
	text = text.toLowerCase().split('');

	var vowelLetters = ['а', 'я', 'ы', 'и', 'о', 'ё', 'у', 'ю', 'э', 'е', 'a', 'e', 'i', 'o', 'u', 'y'],
		counter = 0;

	for (var i = 0; i < vowelLetters.length; i++) {
		for (var j = 0; j < text.length; j++) {
			vowelLetters[i] === text[j] && counter++;
		}
	}

	return counter;
}

countVowelLetters('Шла Саша по шоссе И сосала сУшку'); // 12*/


ПРАКТИЧЕСКИЕ ЗАДАНИЯ ПО ES6
  Задание 7:
    Написать функцию, принимающую массив объектов вида:
      [
          {name: 'Vasya Pupkin', age: 25},
          {name: 'Ivan Petrov', age: 30},
          {name: 'Fedor Ivanov', age: 42}
      ]
    и возвращающую объект вида:
      {
          Пользователи младше 40: [
              {name: 'Vasya Pupkin', age: 25},
              {name: 'Ivan Petrov', age: 30}
          ],
          Пользователь с именем Федор: {name: 'Fedor Ivanov', age: 42}
      }
    Для свойства "Пользователь с именем Федор" осуществлять поиск объекта по имени, которое начинается с подстроки Fedor.

  Задание 8:
    Написать функцию, принимающую массив имен пользователей и возвращающую массив объектов вида:
      [
          {Пользователь 1: 'Вася'},
          {Пользователь 2: 'Петя'}
      ]

  Задание 9:
    Написать функцию, принимающую массив объектов и объединяющую их в один новый объект. Например:
      [
          {name: 'Vasya'},
          {name: 'Piotr', age: 25},
          {salary: '2000$'}
      ]
    необходимо преобразовать в
      {
          name: 'Piotr',
          age: 25,
          salary: '2000$'
      }
    Spread-оператор не использовать. Использовать перебирающий метод массивов. Старые объекты не должны преобразовываться.

  Задание 10:
    Переписать последнее задание с ООП на новый синтаксис. Проверить работоспособность всех методов.

  Задание 11:
    Написать функцию-промис, которая принимает в себя 2 целых числа и выводит в консоль числа, входящие в диапазон,
    каждую секунду. После окончания работы интервала в консоль должно вывестись последнее запомненное число.
    Если в функцию первым параметром было передано бОльшее число - значения параметров следует поменять местами.
    В случае, если в функцию были переданы не целые числа - промис должен быть завершен неуспешно.
